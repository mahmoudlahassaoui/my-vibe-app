doctype html
html
  head
    title AI News - My Vibe.d App
    link(rel="stylesheet", href="/style.css")
  body
    nav
      ul
        li: a(href="/") Home
        - if (isLoggedIn)
          li: a(href="/contact") Contact
          li: a(href="/messages") Messages
          li: a(href="/logout") Logout (#{username})
        - else
          li: a(href="/login") Login
          li: a(href="/register") Register
        li: a(href="/ai-news") AI News
    
    .container
      h1 ü§ñ Latest AI News
      
      .news-loading
        p#loading-status Loading AI news...
      
      #news-container
      
      .news-actions
        button#refresh-btn(onclick="refreshNews()") üîÑ Refresh
    
    script.
      // Simple AI News with RSS feeds
      function loadAINews() {
        console.log('Loading AI news...');
        
        const container = document.getElementById('news-container');
        const loading = document.getElementById('loading-status');
        
        if (loading) loading.style.display = 'block';
        if (container) container.innerHTML = '';
        
        fetch('/api/ai-news')
          .then(response => {
            console.log('üì° API Response status:', response.status);
            return response.json();
          })
          .then(news => {
            console.log('üì∞ Received news data:', news);
            if (loading) loading.style.display = 'none';
            displayNews(news, container);
          })
          .catch(error => {
            console.error('Error:', error);
            if (loading) loading.style.display = 'none';
            if (container) container.innerHTML = '<p>Failed to load news. Please try again.</p>';
          });
      }
      
      function displayNews(news, container) {
        if (!container) return;
        
        console.log('üì∞ Displaying news:', news);
        
        news.forEach(article => {
          const card = document.createElement('div');
          card.className = 'news-card';
          card.style.cursor = 'pointer';
          card.innerHTML = `
            <h3>${article.title}</h3>
            <p>${article.summary}</p>
            <small>üìÖ ${article.date} | üì∞ ${article.source}</small>
            <div style="margin-top: 10px; color: #007acc; font-weight: bold;">üîó Click to read more</div>
          `;
          
          // Add click handler to entire card
          card.addEventListener('click', function() {
            console.log('üîó Opening:', article.url);
            if (article.url && article.url !== '') {
              window.open(article.url, '_blank', 'noopener,noreferrer');
            } else {
              console.log('‚ùå No URL available for this article');
              alert('Sorry, no link available for this article.');
            }
          });
          
          // Add hover effect
          card.addEventListener('mouseenter', function() {
            card.style.transform = 'translateY(-2px)';
            card.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';
          });
          
          card.addEventListener('mouseleave', function() {
            card.style.transform = 'translateY(0)';
            card.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';
          });
          
          container.appendChild(card);
        });
      }
      
      function refreshNews() {
        loadAINews();
      }
      
      // Load news when page loads
      document.addEventListener('DOMContentLoaded', function() {
        // Restore saved background color
        var savedColor = localStorage.getItem('vibeAppBackgroundColor');
        if (savedColor) {
          document.body.style.transition = 'background-color 1s ease-in-out';
          document.body.style.backgroundColor = savedColor;
          console.log('üé® Restored background color:', savedColor);
        }
        
        // Load AI news
        loadAINews();
      });